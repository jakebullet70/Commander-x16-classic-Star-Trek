## --------------------------------------------------------------------
## BASLOAD ISO CRLF 
## Dad TESTING STUFF
## Dad TESTING STUFF
## Dad TESTING STUFF
## --------------------------------------------------------------------
#CONTROLCODES 1
#SYMFILE "@:TEST1.SYM"
## #SAVEAS "@:TEST1.PRG"

START:
	POKE $030C,4 : SYS $FF62 : REM --- CHANGE TO THIN PET UPPER/GRAPHICS
	GOSUB INIT_COLORS
	SCREEN $80 : CLS 
	
	GOTO MMNU_SHOW
	
END_PRG:
	END
	


MMNU_SHOW:
	IF MMNU_INIT = 0 THEN GOSUB MMNU_INIT_ITEMS : MMNU_SELECTED_NDX = 0 : MMNU_INIT = 1
	GOSUB MMNU_UPDATE_SCRN
	ON RET GOSUB DO_NAV,DO_
	IF RET = 1 THEN LOCATE 1,28 : PRINT "M1" 
	IF RET = 2 THEN LOCATE 1,28 : PRINT "M2" 
	IF RET = 3 THEN LOCATE 1,28 : PRINT "QUIT" : END 
	GOTO MMNU_SHOW
	

MMNU_UPDATE_SCRN:
	REM ===== DISPLAY OPTIONS =====
	POKE 903,60  : REM --- CHANGES THE ROW SIZE SO THE LAST CHAR DOES NOT SCROLL THE SCREEN		
	COLOR CLR_TXT_NORMAL
	FOR M = 1 TO MMNU_TTL_MENUS
		LOCATE MMNU_Y_LOCATION(M),MMNU_X_LOCATION(M): PRINT MMNU_TEXT$(M) ;
	NEXT M
		
	REM SLEEP 2 : GOSUB KB_BUFFER_CLEAR
	IF MMNU_SELECTED_NDX<>0 THEN GOTO MMNU_WAIT_KEY
	MMNU_SELECTED_NDX=1
	
MMNU_ROLLOVER:
	IF MMNU_SELECTED_NDX <= MMNU_TTL_MENUS THEN MMNU_SELECTED_NDX = MMNU_SELECTED_NDX + 1: GOTO MMNU_ROLLOVER
	IF MMNU_SELECTED_NDX > MMNU_TTL_MENUS THEN MMNU_SELECTED_NDX = 1
	
MMNU_WAIT_KEY:
	COLOR CLR_TXT_BRIGHT : LOCATE MMNU_Y_LOCATION(MMNU_SELECTED_NDX),MMNU_X_LOCATION(MMNU_SELECTED_NDX)
	PRINT CHR$($12) + MMNU_TEXT$(MMNU_SELECTED_NDX) : REM - show {REV} text
	GOSUB MMNU_MENU_DESCRIPTION
	POKE 903,30  : REM --- PUT ROW SIZE BACK TO THE ORIGINAL

	## WAITKEY01MMNU:
	GOSUB KB_KEYS_GET 
	LOCATE 1,1: REM PRINT "--> "; KB_ASC
	REM == KB_STR$ OR KB_ASC
	IF KB_ASC = 13  THEN RET = MMNU_RET_VAL(MMNU_SELECTED_NDX) : RETURN
	IF KB_ASC = 157 THEN MMNU_SELECTED_NDX=MMNU_SELECTED_NDX-1 	: IF MMNU_SELECTED_NDX = 0 THEN MMNU_SELECTED_NDX = MMNU_TTL_MENUS
	IF KB_ASC = 29  THEN MMNU_SELECTED_NDX=MMNU_SELECTED_NDX+1 	: IF MMNU_SELECTED_NDX > MMNU_TTL_MENUS THEN MMNU_SELECTED_NDX = 1
	IF KB_ASC = 27  THEN END_PRG
	GOTO MMNU_UPDATE_SCRN

		
MMNU_INIT_ITEMS:
	
	MMNU_TTL_MENUS=8 : DIM MMNU_X_LOCATION(MMNU_TTL_MENUS),MMNU_Y_LOCATION(MMNU_TTL_MENUS),MMNU_TEXT$(MMNU_TTL_MENUS),MMNU_RET_VAL(MMNU_TTL_MENUS)
	TMP=29:REM - ROW TO DISPLAY
	MMNU_X_LOCATION(1)= 1 : MMNU_Y_LOCATION(1)= TMP : MMNU_TEXT$(1)=" NAV "		:MMNU_RET_VAL(1) = 1
	MMNU_X_LOCATION(2)= 6 : MMNU_Y_LOCATION(2)= TMP : MMNU_TEXT$(2)=" SRS "		:MMNU_RET_VAL(2) = 2
	MMNU_X_LOCATION(3)=11 : MMNU_Y_LOCATION(3)= TMP : MMNU_TEXT$(3)=" LRS "		:MMNU_RET_VAL(3) = 3
	MMNU_X_LOCATION(4)=16 : MMNU_Y_LOCATION(4)= TMP : MMNU_TEXT$(4)=" PHA "		:MMNU_RET_VAL(4) = 4
	MMNU_X_LOCATION(5)=21 : MMNU_Y_LOCATION(5)= TMP : MMNU_TEXT$(5)=" TOR "		:MMNU_RET_VAL(5) = 5
	MMNU_X_LOCATION(6)=26 : MMNU_Y_LOCATION(6)= TMP : MMNU_TEXT$(6)=" SHE "		:MMNU_RET_VAL(6) = 6
	MMNU_X_LOCATION(7)=31 : MMNU_Y_LOCATION(7)= TMP : MMNU_TEXT$(7)=" COM "		:MMNU_RET_VAL(7) = 7
	MMNU_X_LOCATION(8)=36 : MMNU_Y_LOCATION(8)= TMP : MMNU_TEXT$(8)=" GXY "		:MMNU_RET_VAL(8) = 8

	RETURN

MMNU_MENU_DESCRIPTION:
	COLOR CLR_TXT_NORMAL
	IF MMNU_SELECTED_NDX = 1 THEN TMP$="ENTER COURSE CHANGE"	
	IF MMNU_SELECTED_NDX = 2 THEN TMP$="RUN SHORT RANGE SCAN"
	IF MMNU_SELECTED_NDX = 3 THEN TMP$="RUN LONG RANGE SCAN"
	IF MMNU_SELECTED_NDX = 4 THEN TMP$="FIRE PHOTON CANNON"
	IF MMNU_SELECTED_NDX = 5 THEN TMP$="FIRE TORPEDEOS"
	IF MMNU_SELECTED_NDX = 6 THEN TMP$="SHIELDS UP/DOWN"
	IF MMNU_SELECTED_NDX = 7 THEN TMP$="QUERY COMPUTER"
	IF MMNU_SELECTED_NDX = 8 THEN TMP$="SHOW GALAXY MAP"

	LOCATE 30,1 : print RPT$(ASC(" "),39) :LOCATE 30,2 : PRINT TMP$;
	RETURN

	
## ----------------  INCLUDE FILES HERE ----
REM #INCLUDE "SW-MENU.BAS"
#INCLUDE "\INCLUDE_SRC\KEYS-MOUSE.BL" 
#INCLUDE "\INCLUDE_SRC\COLORS.BL"



